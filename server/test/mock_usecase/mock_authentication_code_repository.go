// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/authentication_code_repository.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/kindaidensan/UMR/domain"
	reflect "reflect"
)

// MockAuthenticationCodeRepository is a mock of AuthenticationCodeRepository interface
type MockAuthenticationCodeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationCodeRepositoryMockRecorder
}

// MockAuthenticationCodeRepositoryMockRecorder is the mock recorder for MockAuthenticationCodeRepository
type MockAuthenticationCodeRepositoryMockRecorder struct {
	mock *MockAuthenticationCodeRepository
}

// NewMockAuthenticationCodeRepository creates a new mock instance
func NewMockAuthenticationCodeRepository(ctrl *gomock.Controller) *MockAuthenticationCodeRepository {
	mock := &MockAuthenticationCodeRepository{ctrl: ctrl}
	mock.recorder = &MockAuthenticationCodeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthenticationCodeRepository) EXPECT() *MockAuthenticationCodeRepositoryMockRecorder {
	return m.recorder
}

// Store mocks base method
func (m *MockAuthenticationCodeRepository) Store(arg0 domain.AuthenticationCode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store
func (mr *MockAuthenticationCodeRepositoryMockRecorder) Store(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockAuthenticationCodeRepository)(nil).Store), arg0)
}

// FindAll mocks base method
func (m *MockAuthenticationCodeRepository) FindAll() (domain.AuthenticationCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll")
	ret0, _ := ret[0].(domain.AuthenticationCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll
func (mr *MockAuthenticationCodeRepositoryMockRecorder) FindAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockAuthenticationCodeRepository)(nil).FindAll))
}
